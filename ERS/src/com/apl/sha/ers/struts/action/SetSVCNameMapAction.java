/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.apl.sha.ers.struts.action;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.apl.sha.ers.exception.NonUniqueDataException;
import com.apl.sha.ers.model.CtnType;
import com.apl.sha.ers.model.SVCNameMap;
import com.apl.sha.ers.model.User;

/** 
 * MyEclipse Struts
 * Creation date: 01-21-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/getOneWayCtns.do" redirect="true"
 */
public class SetSVCNameMapAction extends BaseAction {
	private static final String errorTag="error";
	private static final String cancelPath="/getSVCNameMap.jsp";
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getParameter("org.apache.struts.taglib.html.CANCEL")!=null) {
			return cancelHandle(mapping,request,cancelPath);
		}
		ActionForward actionForward=this.checkPriv(mapping, request, this.getClass().getSimpleName());
		if(actionForward!=null) return actionForward ;
		User user=this.getUser(request);
		SVCNameMap stp=this.getSVCNameMap(request);
		if(request.getParameter("delete_flag").toString().equalsIgnoreCase("Y")){
			//process.disableBlockCodeUpdate(bcu, user);
			process.setSVCNameMap(stp, 1, user);
		}
		else{
			process.setSVCNameMap(stp, 0, user);
		}
		
		request.getSession().setAttribute("SVCNameMaps",process.getSVCNameMap());
		return mapping.findForward(success);
	}
	private SVCNameMap getSVCNameMap(HttpServletRequest request) {
		SVCNameMap stp=new SVCNameMap();
		stp.setSvcname(request.getParameter("svcname").trim().toUpperCase());
		stp.setPlaceofreturn(request.getParameter("placeofreturn"));
		stp.setPortofloadingcode(request.getParameter("portofloadingcode").trim().toUpperCase());
		return stp;
	}
}