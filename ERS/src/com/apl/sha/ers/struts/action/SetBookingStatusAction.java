/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.apl.sha.ers.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessages;


import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionMessage;

import com.apl.sha.ers.model.Booking;

/** 
 * MyEclipse Struts
 * Creation date: 03-21-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/getBookingCtn.do"
 */
public class SetBookingStatusAction extends BaseAction {
	/*
	 * Generated Methods
	 */
	private final static String error = "errorself";
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ActionForward actionForward=this.checkPriv(mapping, request, this.getClass().getSimpleName());
		if(actionForward!=null) return actionForward ;
		String remark=request.getParameter("remark").trim();
		byte[] remarktest = remark.getBytes();  		
		
		int rlength = remark.length();
		String srk [] = remark.split("#");
		//System.out.println(srk.length);
		HttpSession session=request.getSession();
		Booking booking=(Booking) session.getAttribute("booking");
		if( srk.length == 1 ){
			if(remarktest.length>100){
				ActionErrors errors = new ActionErrors();
				errors.add("remark", new ActionMessage("error.remark.maxlength"));
	    		this.addErrors(request, errors);
	    		System.out.println(mapping.getInput());
				return mapping.getInputForward();
			}else{
				booking.getStatus().setRemark(remark);
				booking.getStatus().setSremark("");
			}
		}else if(srk.length >= 2){
			String lastchar = String.valueOf(remark.charAt(rlength-1));
			if(lastchar.equalsIgnoreCase("#")){
				//sremark check and save
				String sremark = srk[srk.length-1];
				String remarktmp = "";
				if(sremark.getBytes().length>100){
					ActionErrors errors = new ActionErrors();
					errors.add("remark", new ActionMessage("error.sremark.maxlength"));
		    		this.addErrors(request, errors);
		    		return mapping.getInputForward();
				}else{
					booking.getStatus().setSremark(sremark);
				}
				for(int i=0;i<srk.length-1;i++){
					if(i==srk.length-2){
						remarktmp = remarktmp + srk[i];
					}else{
						remarktmp = remarktmp + srk[i] + "#";
					}					
				}
				//System.out.println(remarktmp);
				if(remarktmp.getBytes().length>100){
					ActionErrors errors = new ActionErrors();
					errors.add("remark", new ActionMessage("error.remark.maxlength"));
		    		this.addErrors(request, errors);
		    		return mapping.getInputForward();
				}else{
					booking.getStatus().setRemark(remarktmp);
				}
			}else{
				if(remarktest.length>100){
					ActionErrors errors = new ActionErrors();
					errors.add("remark", new ActionMessage("error.remark.maxlength"));
		    		this.addErrors(request, errors);
		    		return mapping.getInputForward();
				}else{
					booking.getStatus().setRemark(remark);
					booking.getStatus().setSremark("");
				}
			}
		}
		
		//booking.getStatus().setRemark(remark);
		process.setBookingStatus(booking, getUser(request));
		return this.addForwardParameter(mapping.findForward(success),"blnumber",Integer.toString(booking.getBlnumber()));
	}
}