/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.apl.sha.ers.struts.action;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.apl.sha.ers.exception.BookingException;
import com.apl.sha.ers.exception.ErrCode;
import com.apl.sha.ers.exception.NoDataException;
import com.apl.sha.ers.model.User;

/** 
 * MyEclipse Struts
 * Creation date: 12-26-2006
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/getbooking.jsp"
 */
public class GetBookingAction extends BaseAction {
	
	private final static String showmessage ="showmessage";
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ActionForward actionForward=this.checkPriv(mapping, request, this.getClass().getSimpleName());
		if(actionForward!=null) return actionForward ;
		int blnumber=0;
		try {
			blnumber=Integer.parseInt(request.getParameter("blnumber").trim());
		}catch(NumberFormatException e) {
			String b_blnumber = "";			
			b_blnumber = request.getParameter("blnumber").trim().toUpperCase();
			
			if(!b_blnumber.equalsIgnoreCase("")){
				if(b_blnumber.substring(0, 1).equalsIgnoreCase("0")){
					b_blnumber = b_blnumber.substring(1);
				}
			}
			
			int baby_exists = process.checkBabyBooking(b_blnumber);
			
			if (baby_exists==0){
				ActionErrors errors = new ActionErrors();
				errors.add("getBookingError", new ActionMessage("babybooking.notreceived",new Object[] {request.getParameter("blnumber").trim()}));
				this.addErrors(request, errors);
			}
			else{
				ActionMessages messages=new ActionMessages();
				messages.add("getBookingMSG",new ActionMessage("babybooking.received",new Object[] {request.getParameter("blnumber").trim()}));
				this.saveMessages(request, messages);
			}
			
			return mapping.findForward(showmessage);
			//return this.errorHandle(mapping, request, "errors.integer",new Object[] {"Booking"});
		}
		HttpSession session=request.getSession();
		Map ctnTypes=(Map)session.getServletContext().getAttribute("ctntypes");
		String templateFolder=session.getServletContext().getRealPath("/report");
		String destFileName="bookingOrder"+blnumber+".html";
		String destFilePath=session.getServletContext().getRealPath("/report/"+destFileName);
/*		try {
			session.setAttribute("booking", process.getBooking(blnumber,ctnTypes));
		} catch (NoDataException e) {
			return this.errorHandle(mapping, request, "error.object.notfound", new Object[] {"Booking",blnumber});
		}*/
		User user=getUser(request);
		String returnLink=request.getHeader("Referer");
		try {
			process.getBookingOrder(templateFolder, destFilePath, blnumber, returnLink, ctnTypes,user);
		} catch (NoDataException e) {
			return this.errorHandle(mapping, request, "error.object.notfound", new Object[] {getMessage(request, "booking.displayname"),blnumber});
		} catch (BookingException e) {
			if(e.getErrCode()==ErrCode.notOwnerBookingCode) {
				return this.errorHandle(mapping, request, "error.booking.notowner", new Object[] {blnumber});
			}
		}
		session.setAttribute("path", "/report/"+destFileName);
		return new ActionForward("/report/"+destFileName,true);
//		return new ActionForward("/getBookingOrder.jsp",true);
	}
}