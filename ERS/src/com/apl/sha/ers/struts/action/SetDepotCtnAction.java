/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.apl.sha.ers.struts.action;

import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.commons.beanutils.BeanUtils;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.apl.sha.ers.exception.DataException;
import com.apl.sha.ers.model.Depot;
import com.apl.sha.ers.model.DepotCtn;
import com.apl.sha.ers.model.User;
import com.apl.sha.ers.struts.form.SetDepotCtnForm;
import com.apl.sha.ers.util.DateUtil;

/** 
 * MyEclipse Struts
 * Creation date: 01-15-2007
 * 
 * XDoclet definition:
 * @struts.action path="/setDepotCtn" name="setDepotCtnForm" input="/form/setDepotCtn.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/getDepot.jsp"
 */
public class SetDepotCtnAction extends BaseAction {
	private static final String privname="SetDepotAction";
	private static final String cancelPath="/depot.jsp";
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(isCancelled(request)) {
			return cancelHandle(mapping,request,cancelPath);
		}
		ActionForward actionForward=this.checkPriv(mapping, request, privname);
		if(actionForward!=null) return actionForward ;
		SetDepotCtnForm setDepotCtnForm = (SetDepotCtnForm) form;
		Map ctns=convertFromForm(setDepotCtnForm);
		HttpSession session=request.getSession(false);
		Depot depot=(Depot) session.getAttribute("depot");
		Depot depotTmp=null;
		try {
			depotTmp = (Depot) BeanUtils.cloneBean(depot);
		} catch (Exception e) {
		}
		depotTmp.setContainers(ctns);
		User user=(User)session.getAttribute("user");
		try {
			process.setDepotCtns(depotTmp, user);
		} catch (DataException e) {
			
		}
		return this.addForwardParameter(mapping.findForward(success),"depotcode",depot.getDepotcode());
	}
	
	private Map convertFromForm(SetDepotCtnForm form){
		Map ctns=new TreeMap();
		for(Iterator it=form.getRowIdList().iterator();it.hasNext();) {
			String key=(String)it.next();
			if(form.getAttribute(key+"_checked")!=null){
				DepotCtn ctn=new DepotCtn();
				String ctnID=(String)form.getAttribute(key+"_id");
				if(ctnID.indexOf("Add")>=0) {
					ctn.setId(0);
				}else {
					ctn.setId(Integer.parseInt(ctnID));
				}
				ctn.setCtnCode(key);
				ctn.setInitalDate(DateUtil.parseDate((String) form.getAttribute(key+"_initalDate")));
				ctn.setInitalQty(Integer.parseInt((String) form.getAttribute(key+"_initalQty")));
				ctns.put(key, ctn);
			}
		}
//		depot.setId(form.getId());
//		depot.setDepotcode(form.getDepotcode().toUpperCase());
//		depot.setLocation(form.getLocation().toUpperCase());
//		depot.setEname(form.getEname());
//		depot.setCname(form.getCname());
//		depot.setTel(form.getTel());
//		depot.setEaddress(form.getEaddress());
//		depot.setCaddress(form.getCaddress());
//		depot.setContact(form.getContact());
//		depot.setEmail(form.getEmail());
		return ctns;
	}
}