/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.apl.sha.ers.struts.action;

import java.util.Iterator;
import java.util.Map;
import java.util.TreeMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.apl.sha.ers.exception.NoDataException;
import com.apl.sha.ers.model.Depot;
import com.apl.sha.ers.model.DepotCtn;
import com.apl.sha.ers.model.User;
import com.apl.sha.ers.struts.form.SetDepotCtnForm;
import com.apl.sha.ers.util.DateUtil;
import com.apl.sha.ers.util.Util;

/** 
 * MyEclipse Struts
 * Creation date: 01-15-2007
 * 
 * XDoclet definition:
 * @struts.action path="/initSetDepotCtn" name="initSetDepotCtnForm" input="/form/initSetDepotCtn.jsp" scope="request" validate="true"
 */
public class InitSetDepotCtnAction extends BaseAction {
	private static final String privname="SetDepotAction";
	private static final String returnPath="/depot.jsp";
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ActionForward actionForward=this.checkPriv(mapping, request, privname);
		if(actionForward!=null) return actionForward ;
		HttpSession session=request.getSession(false);
		String depotCode=request.getParameter("depotcode");
		Depot depot=(Depot) session.getAttribute("depot");
		User user=getUser(request);
		if(depot==null||!depot.getDepotcode().equals(depotCode)) {
			Map ctnTypes=(Map)session.getServletContext().getAttribute("ctntypes");
			try {
				depot=process.getDepot(depotCode, ctnTypes, user);
			} catch (NoDataException e) {
				return this.errorHandle(mapping, request, "error.object.notfound", new Object[] {"Depot", depotCode});
			}
		}
//		Map ctntypes=(Map) session.getServletContext().getAttribute("ctntypes");
//		Map remainCtnTypes=new TreeMap();
//		remainCtnTypes.putAll(ctntypes);
//		Util.minusMap(remainCtnTypes,depot.getContainers());
//		session.setAttribute("remainctntypes", remainCtnTypes);
		SetDepotCtnForm setDepotCtnForm = (SetDepotCtnForm) form;
		convertToForm(depot, setDepotCtnForm);
		setReturnPath(request, returnPath);
		return mapping.findForward(success);
	}
	
	private void convertToForm(Depot depot,SetDepotCtnForm form) {
		Map ctns=depot.getContainers();
		Map map=new TreeMap();
		for(Iterator it=ctns.keySet().iterator();it.hasNext();) {
			DepotCtn ctn=(DepotCtn) ctns.get(it.next());
			String key=ctn.getCtnCode();
			map.put(key+"_checked", true);
			map.put(key+"_id", ctn.getId());
			map.put(key+"_ctnCode", ctn.getCtnCode());
			map.put(key+"_initalDate", DateUtil.formatDate(ctn.getInitalDate()));
			map.put(key+"_initalQty", ctn.getInitalQty());
		}
		form.setMap(map);
	}
}