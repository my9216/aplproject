/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.apl.sha.ers.struts.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

import com.apl.sha.ers.exception.BookingException;
import com.apl.sha.ers.exception.DataException;
import com.apl.sha.ers.exception.ErrCode;
import com.apl.sha.ers.exception.NoDataException;
import com.apl.sha.ers.model.Booking;
import com.apl.sha.ers.model.User;

import java.util.LinkedList;
import java.util.List;
/** 
 * MyEclipse Struts
 * Creation date: 03-01-2007
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/getBookingCtn.jsp"
 */
public class SetBookingCtnStatusAction extends BaseAction {
	private static final String cancelPath="/home.jsp";
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		if(request.getParameter("org.apache.struts.taglib.html.CANCEL")!=null) {
			return cancelHandle(mapping,request,cancelPath);
		}
		String status="P";
		if(request.getParameter("rStatus")!=null) {
			status="R";
		}
		ActionForward actionForward=this.checkPriv(mapping, request, this.getClass().getSimpleName(),status);
		if(actionForward!=null) return actionForward ;
		String PrintID=request.getParameter("PrintID");		
		ActionErrors errors = new ActionErrors();
		Booking booking=(Booking)request.getSession(false).getAttribute("booking");
		String msgudtCtnNum = getMessage(request,"button.udtCtnNum.displayname");

		String strUptCtnNum = request.getParameter("updateCtnNum")==null?"":request.getParameter("updateCtnNum");
		
		User optuser = getUser(request);
		
		if(optuser.getLocation().equalsIgnoreCase("SHA"))
		{
			if(booking.getBlockcode()== null){
				errors.add("setBookingCtnError", new ActionMessage("error.booking.noblk",new Object[] {booking.getBlnumber()}));
				this.addErrors(request, errors);
				return mapping.getInputForward();
			}else if(booking.getBlockcode().equalsIgnoreCase("NO BLOCK")){
				errors.add("setBookingCtnError", new ActionMessage("error.booking.noblk",new Object[] {booking.getBlnumber()}));
				this.addErrors(request, errors);
				return mapping.getInputForward();
			}
		}
		
		

		
		if(strUptCtnNum.equalsIgnoreCase(msgudtCtnNum)){
			List ctnlist = new LinkedList();
			ctnlist =	process.getCtnID(booking.getBlnumber());
			String ctnnbrstr = "";
			int ctnid;
			for(int p=0; p<ctnlist.size(); p++){
				ctnnbrstr = request.getParameter("ctnnbr"+ctnlist.get(p).toString()).toUpperCase();
				ctnid = Integer.parseInt(ctnlist.get(p).toString());
				try {
					//process.setCtnNBR(ctnnbrstr, ctnid, getUser(request));
					process.setCtnNBR(ctnnbrstr, ctnid, optuser);
				} catch (Exception e) {
				}
			}
			//errors.add("setBookingCtnError", new ActionMessage("error.booking.noblk",new Object[] {"sucessfully"}));
			//this.addErrors(request, errors);
			//return mapping.getInputForward();
			return addForwardParameter(mapping.findForward(success),"blnumber",Integer.toString(booking.getBlnumber())) ;
		}
		else{
			if(PrintID!=null){				
				
				String cuser= request.getParameter("cuser"+PrintID);
				HttpSession session=request.getSession();
				String templateFolder=session.getServletContext().getRealPath("/report");
				String destFileName="CtnPrint"+PrintID+".html";
				String destFilePath=session.getServletContext().getRealPath("/report/"+destFileName);
				try {
					process.GetCtnReleasev2(templateFolder, destFilePath, Integer.parseInt(PrintID.trim()), cuser);
				} catch (NoDataException e) {
					return this.errorHandle(mapping, request, "error.object.notfound", new Object[] {getMessage(request, "booking.ctns.displayname"),PrintID});
				} 
				session.setAttribute("path", "/report/"+destFileName);
				return new ActionForward("/report/"+destFileName,true);
			}
			else{
				String[] ctnID=request.getParameterValues("ctnID");
				if(ctnID==null) {
					return errorHandle(mapping, request, "error");
				}
				int[] ctnIDs=new int[ctnID.length];
				String[] ctnNbrs=new String[ctnID.length];
				for(int i=0;i<ctnID.length;i++) {
					ctnIDs[i]=Integer.parseInt(ctnID[i]);
					if(status.equalsIgnoreCase("P")) {
						ctnNbrs[i]=request.getParameter("ctnnbr"+ctnID[i]).toUpperCase();
					}
				}
				try {
					//process.setBookingCtnsStatus(ctnIDs, ctnNbrs, status, getUser(request));
					process.setBookingCtnsStatus(ctnIDs, ctnNbrs, status, optuser);
				} catch (DataException e) {
				}
				//Booking booking=(Booking)request.getSession(false).getAttribute("booking");
				return addForwardParameter(mapping.findForward(success),"blnumber",Integer.toString(booking.getBlnumber())) ;
			}
			
		}		
	}
}