/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.apl.sha.ers.struts.form;

import java.util.Iterator;
import java.util.Locale;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts.Globals;
import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.util.MessageResources;
import org.apache.struts.util.RequestUtils;

import com.apl.sha.ers.util.DateUtil;
import com.apl.sha.ers.util.Util;

/**
 * MyEclipse Struts Creation date: 01-15-2007
 * 
 * XDoclet definition:
 * 
 * @struts.form name="setDepotCtnForm"
 */
public class SetDepotCtnForm extends MapForm {
	/*
	 * Generated fields
	 */

	/** depotCode property */
	private String depotCode;

	/*
	 * Generated Methods
	 */

	/**
	 * Method validate
	 * 
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		ActionErrors errors = super.validate(mapping, request);
		MessageResources mResources = (MessageResources) request
				.getAttribute(Globals.MESSAGES_KEY);
		Locale locale = RequestUtils.getUserLocale(request, null);
		for (Iterator it = getRowIdList().iterator(); it.hasNext();) {
			String key = (String) it.next();
			if (getAttribute(key + "_checked") != null) {
				if (!DateUtil.isValidDate((String) getAttribute(key
						+ "_initalDate"))) {
					errors.add(key, new ActionMessage("errors.date", 
							mResources.getMessage(locale,"depot.container.initaldate.displayname"),
							mResources.getMessage(locale,"format.date.standard")));

				}
				if (!Util.isInteger((String) getAttribute(key + "_initalQty"))) {
					errors.add(key, new ActionMessage("errors.integer",
							mResources.getMessage(locale,"depot.container.initalqty.displayname")));
				}
			}
		}
		return errors;
	}

	/**
	 * Method reset
	 * 
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
	}

	public String getDepotCode() {
		return depotCode;
	}

	public void setDepotCode(String depotCode) {
		this.depotCode = depotCode;
	}

	private String getMessage(HttpServletRequest request, String key) {
		MessageResources mResources = (MessageResources) request
				.getAttribute(Globals.MESSAGES_KEY);
		Locale locale = RequestUtils.getUserLocale(request, null);
		return mResources.getMessage(locale, getDepotCode());
	}
}