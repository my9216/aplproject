<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
    	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
     	http://www.springframework.org/schema/context  
     	http://www.springframework.org/schema/context/spring-context-3.0.xsd  
    	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
    	http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd">

	<!-- 读取配置文件 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
		<property name="locations">  
			<list>  
	      		<value>/config/database_config.properties</value>
	      		<value>/config/mq_config.properties</value>
	      		<value>/config/schedule_config.properties</value>
      		</list>  
    </property>  
	</bean> 
	
	<!-- mq连接工厂 -->
	<bean id="mqConnectionFactory" class="com.ibm.mq.jms.MQConnectionFactory">
		<property name="hostName" value="${mq_hostName}" />
		<property name="queueManager" value="${mq_queueManager}" />
		<property name="channel" value="${mq_channel}" />
		<property name="port" value="${mq_port}" />
		<property name="transportType" value="1" />
		<!-- <property name="tempTopicPrefix" value="aaa"/> -->
	</bean>

	<bean id="userConnectionFactory"
		class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
		<property name="targetConnectionFactory" ref="mqConnectionFactory" />
		<property name="username" value="${mq_username}" />
		<property name="password" value="${mq_password}" />
	</bean>

	<!-- 消息监听器 -->
	<!-- <jms:listener-container connection-factory="userConnectionFactory" 
		destination-type="topic"> -->
	<bean id="consumerMessageListener" class="com.apl.convert.mq.ConsumerMessageListener" />
	<jms:listener-container connection-factory="userConnectionFactory">
		<jms:listener destination="${mq_destination}" ref="consumerMessageListener"
			method="onMessage" />
	</jms:listener-container>


	<!-- 要调用的工作类 -->
	<bean id="quartzJob" class="com.apl.convert.q2ctowbp.ConvertSchedule"></bean>
	<!-- 定义调用对象和调用对象的方法 -->
	<bean id="jobtask"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<!-- 调用的类 -->
		<property name="targetObject">
			<ref bean="quartzJob" />
		</property>
		<!-- 调用类中的方法 -->
		<property name="targetMethod">
			<value>execute</value>
		</property>
		<property name="concurrent">  
        <value>false</value>  
    </property>  
	</bean>
	
	<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
		<property name="jobDetail" ref="jobtask" />  
		<property name="startDelay" value="0" /><!-- 调度工厂实例化后，经过0秒开始执行调度 -->  
		<property name="repeatInterval" value="${convert_schedule}" /><!-- 调用间隔（毫秒） -->  
	</bean>
	
	<!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序 -->
	<bean id="startQuertz" lazy-init="false" autowire="no"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="simpleTrigger" />
			</list>
		</property>
	</bean>
	
</beans>  